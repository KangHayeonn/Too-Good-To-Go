# workflow의 이름
name: Backend_CD

# workflow가 언제 실행될건지
on:
  # push:
  pull_request:
    branches:
      - master
    paths:
      - 'Back/**'
jobs:
  build:
    # Github action 스크립트가 작동될 OS 환경
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2 # 프로젝트 코드로 checkout

    - name: Set up docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-latest # runner 설정에서 읽어들일거
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}
    
    - name: Build and Push
      working-directory: ./Back
      run: |
        chmod +x ./gradlew
        ./gradlew build
        docker build . -t ghcr.io/kanghayeonn/too-good-to-go:latest
        docker push ghcr.io/kanghayeonn/too-good-to-go:latest

    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   with:
    #     # directory: ./Back
    #     builder: ${{ steps.buildx.outputs.name }}
    #     file: ./Back/Dockerfile
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: ghcr.io/kanghayeonn/too-good-to-go:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, prod ]
    steps:
    - name: Login to ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}
    - name: Docker run
      run: |
        docker ps -q --filter "name=too-good-to-go" | grep -q . && docker stop too-good-to-go && docker rm -fv too-good-to-go
        docker run -d -p 80:8080 --name too-good-to-go --restart always ghcr.io/kanghayeonn/too-good-to-go:latest

    # Slack 알림
    - name: CD notification to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        author_name: Backend CD
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BACKEND_WEBHOOK_URL }}
