# workflow의 이름
name: CI

# workflow가 언제 실행될건지
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  backend:
    name: CI with Gradle
    runs-on: ubuntu-latest # Github action 스크립트가 작동될 OS 환경
    env:
      working-directory: ./Back
    steps:
    - name: Checkout
      uses: actions/checkout@v2 # 프로젝트 코드로 checkout
		
    - name: Set up JDK 11
      uses: actions/setup-java@v1 # Github action이 실행될 OS에 Java 설치
      with:
        java-version: 11 # JDK 11 버전 사용
		
		# 캐싱
    - name: Cache Gradle packages
			uses: actions/cache@v2
		  with:
		  path: |
      ~/.gradle/caches
      ~/.gradle/wrapper
		  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
		  restore-keys: |
		      ${{ runner.os }}-gradle-

    # gradlew 권한 부여
    - name: Grant execute premission to gradlew
      run: chmod +x ./gradlew # gradlew를 사용하기 위한 실행권한 획득
      working-directory: ./Back
      
    # gradle 빌드 (build+test)
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./Back

		# 결과 저장
		- name: If failure then upload test reports
      if: failure() // 테스트나 빌드가 실패시 실행
      run: |
        TARBALL_BASENAME="r6-stats-report"
        TARBALL="$TARBALL_BASENAME.tar"
        
        echo 'Collecting the test report'
        find . -path '*/build/reports/tests' -type d \
          -exec tar rf "$TARBALL" \
            --xform="s:./:$TARBALL_BASENAME/:" \
            --xform='s:/build/reports/tests::' \
            {} ';'
        
        echo 'Compressing the test reports .. '
        gzip "$TARBALL"
        
        echo 'Uploading the test reports .. '
        curl -F "file=@$TARBALL.gz" 'https://file.io/'
        echo
        echo 'Download the test reports from the URL above.'

		# 캐싱
    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      if: ${{ always() }}
      run: |
        rm -fr ~/.gradle/caches/[0-9]* || true
        rm -fr ~/.gradle/caches/journal-* || true
        rm -fr ~/.gradle/caches/transforms-* || true
        rm -f ~/.gradle/caches/*/*.lock || true
        rm -f ~/.gradle/caches/*/gc.properties || true
      shell: bash
		
		# Slack 알림
		- name: CI notification to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{job.status}}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        author_name: Backend CI
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BACKEND_WEBHOOK_URL }}
