# workflow의 이름
name: CD

# workflow가 언제 실행될건지
on:
  workflow_dispatch:

jobs:
  build:
    # Github action 스크립트가 작동될 OS 환경
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2 # 프로젝트 코드로 checkout
      
    # runner가 EC2'
    - name: Set up docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Docker run
        run: |
          docker ps -q --filter "name={your image name}" | grep -q . && docker stop {your image name} && docker rm -fv {your image name}
          docker run -d -p 8080:8080 --name cicd --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

