plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.9.2" // Asciidoctor 플러그인 적용
    id 'java'
}

group = 'com.toogoodtogo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // 프로젝트에서 .adoc파일들을 읽어 build/generated-snippets 에 파일읽어 HTML문서로 export
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' //MockMVC 의존성
}

ext {
    snippetsDir = file('build/generated-snippets') // Snippet 의 생성 위치를 지정
}

test {
    outputs.dir snippetsDir // 테스트 테스크가 실행될때 snippets들이 생성위치에 떨어지게 설정
    useJUnitPlatform()
}

asciidoctor { //asciidoctor task 설정
    inputs.dir snippetsDir // Snippets 디렉토리를 Input 디렉토리로 설정
    dependsOn test // 문서 생성 전 테스트가 실행되도록 test가 실행되도록 설정
}

asciidoctor.doFirst { //기존에 존재하는 docs를 삭제
    delete file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor //jar 생성전에 asciidoctor 테스크가 실행되도록 설정해준다.
    from ("${asciidoctor.outputDir}/html5") { //jar static 폴더에 rest docs가 HTML로 생성되면 넣어준다.
        into 'static/docs'
    }
}